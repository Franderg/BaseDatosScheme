#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 1603 0 28 3 12 #"#lang scheme"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";############  Funciones que escribe en archivos ###################"
 #"#########"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"escritura2"
0 0 24 3 1 #" "
0 0 14 3 4 #"dato"
0 0 24 3 1 #" "
0 0 14 3 7 #"archivo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 21 #"call-with-output-file"
0 0 24 3 1 #" "
0 0 14 3 7 #"archivo"
0 0 24 3 1 #" "
0 0 14 3 4 #"dato"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"append"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"escritura"
0 0 24 3 1 #" "
0 0 14 3 4 #"dato"
0 0 24 3 1 #" "
0 0 14 3 7 #"archivo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 21 #"call-with-output-file"
0 0 24 3 1 #" "
0 0 14 3 7 #"archivo"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"append"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 11 #"output-port"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 4 #"dato"
0 0 24 3 1 #" "
0 0 14 3 11 #"output-port"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";###################################################################"
 #"#########"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"leer-archivo"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"ruta"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 15 #"open-input-file"
0 0 24 3 1 #" "
0 0 14 3 4 #"ruta"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #" (("
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"read-line"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 11 #"eof-object?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 16 #"close-input-port"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 9 #"read-line"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 9 #")))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";##################################################################"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";Primer comando ct (crear tabla)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ct"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 1 #" "
0 0 14 3 5 #"datos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 17 3 35 #";verificamos que la tabla no exista"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 5 #"datos"
0 0 24 3 2 #" )"
0 0 17 3 31 #";si vamos a ingresar algun dato"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 5 #"datos"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 17 3 47 #";verificamos si se debe agregar algo a la tabla"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"ct_auxiliar"
0 0 24 3 1 #" "
0 0 14 3 5 #"datos"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 4 #"))))"
0 0 17 3 39 #";vamos a una funcion auxiliar recursiva"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"escritura2"
0 0 24 3 1 #" "
0 0 14 3 7 #"newline"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 2 #"))"
0 0 17 3 45 #";\\n al final de los datos para mantener orden"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"ct_auxiliar"
0 0 24 3 1 #" "
0 0 14 3 5 #"datos"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 2 #") "
0 0 17 3 55 #";funcion recursiva donde se escribe en la tabla la info"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 5 #"datos"
0 0 24 3 1 #")"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 17 3 24 #";revisamos si no es null"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"escritura"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"datos"
0 0 24 3 2 #") "
0 0 14 3 5 #"tabla"
0 0 24 3 3 #" ) "
0 0 17 3 33 #";escribimos en la tabla los datos"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"escritura"
0 0 24 3 1 #" "
0 0 19 3 3 #"\":\""
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 3 #" ) "
0 0 17 3 45 #";como separador se va a usar los dos puntos :"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"ct_auxiliar"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"datos"
0 0 24 3 2 #") "
0 0 14 3 5 #"tabla"
0 0 24 3 4 #"))))"
0 0 17 3 34 #";segimos con el resto de los datos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";##################################################################"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";Comando ins estud 2012001 julio 5554444"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ins"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 1 #" "
0 0 14 3 8 #"pColList"
0 0 24 3 1 #" "
0 0 14 3 8 #"pValList"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 1 #")"
0 0 17 3 32 #";verificamos que existe la tabla"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 8 #"pColList"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 15 #"verificadorDeID"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"pColList"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"existsID?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 11 #"file->lines"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 3 #"))("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"pValList"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"ins-aux"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lineFormat"
0 0 24 3 2 #" ("
0 0 14 3 11 #"file->lines"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 3 #")) "
0 0 14 3 8 #"pColList"
0 0 24 3 1 #" "
0 0 14 3 8 #"pValList"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"escritura2"
0 0 24 3 1 #" "
0 0 14 3 5 #"tabla"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";Auxiliar function for ins. Makes the recursive part."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ins-aux"
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 1 #" "
0 0 14 3 10 #"pTablaList"
0 0 24 3 1 #" "
0 0 14 3 8 #"pColList"
0 0 24 3 1 #" "
0 0 14 3 8 #"pValList"
0 0 24 3 1 #" "
0 0 14 3 5 #"pFlag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 10 #"pTablaList"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 8 #"pColList"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"pFlag"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 8 #"pColList"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"pFlag"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"write-to-file"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 5 #"nil)\""
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 21 3 1 #"'"
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 21 3 1 #"'"
0 0 14 3 6 #"append"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"write-to-file"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 21 3 1 #"'"
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 21 3 1 #"'"
0 0 14 3 6 #"append"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"ins-aux"
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 10 #"pTablaList"
0 0 24 3 2 #") "
0 0 14 3 8 #"pColList"
0 0 24 3 1 #" "
0 0 14 3 8 #"pValList"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 10 #"pTablaList"
0 0 24 3 2 #")("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"pColList"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 8 #"pValList"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 13 #"write-to-file"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 5 #"nil)\""
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 21 3 1 #"'"
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 21 3 1 #"'"
0 0 14 3 6 #"append"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 13 #"write-to-file"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 21 3 1 #"'"
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 21 3 1 #"'"
0 0 14 3 6 #"append"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"ins-aux"
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 10 #"pTablaList"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"pColList"
0 0 24 3 2 #") "
0 0 14 3 8 #"pValList"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 13 #"write-to-file"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"pValList"
0 0 24 3 2 #") "
0 0 14 3 6 #"pTabla"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 21 3 1 #"'"
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 21 3 1 #"'"
0 0 14 3 6 #"append"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 13 #"write-to-file"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 21 3 1 #"'"
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 21 3 1 #"'"
0 0 14 3 6 #"append"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"ins-aux"
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 10 #"pTablaList"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"pColList"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"pValList"
0 0 24 3 1 #")"
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 10 #"pTablaList"
0 0 24 3 2 #")("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"pColList"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"write-to-file"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 19 3 1 #"\""
0 0 19 3 1 #"("
0 0 19 3 5 #"nil)\""
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 21 3 1 #"'"
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 21 3 1 #"'"
0 0 14 3 6 #"append"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"write-to-file"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:mode"
0 0 21 3 1 #"'"
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 21 3 1 #"'"
0 0 14 3 6 #"append"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"ins-aux"
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 10 #"pTablaList"
0 0 24 3 2 #") "
0 0 14 3 8 #"pColList"
0 0 24 3 1 #" "
0 0 14 3 8 #"pValList"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";Checks if the unique ID name exists."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"verificadorDeID"
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 1 #" "
0 0 14 3 3 #"pID"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 3 #"pID"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 10 #"lineFormat"
0 0 24 3 2 #" ("
0 0 14 3 11 #"file->lines"
0 0 24 3 1 #" "
0 0 14 3 6 #"pTabla"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";Checks existant ID."
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";receives a list and searches for a existant IDvalue in the first co"
 #"lumn."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"existsID?"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"pIDVal"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lineFormat"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"pIDVal"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 10 #"lineFormat"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"existsID?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 2 #") "
0 0 14 3 6 #"pIDVal"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ) "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lineFormat"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 2 #")("
0 0 14 3 12 #"string-split"
0 0 24 3 2 #" ("
0 0 14 3 14 #"string-replace"
0 0 24 3 1 #"("
0 0 14 3 14 #"string-replace"
0 0 24 3 2 #" ("
0 0 14 3 14 #"string-replace"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 19 3 4 #"\"\\\"\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"_\""
0 0 24 3 2 #") "
0 0 19 3 5 #"\"___\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"_\""
0 0 24 3 1 #")"
0 0 19 3 7 #"\"__\"\"_\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"_\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";##################################3"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"endof"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 14 3 3 #"apd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"char=?"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\)"
0 0 24 3 2 #" ("
0 0 14 3 10 #"string-ref"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 4 #") ( "
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 6 #") )) ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"apd"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-trim"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 5 #" )) ]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"apd"
0 0 24 3 2 #" ("
0 0 14 3 5 #"endof"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 14 3 3 #"apd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lastof"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ( "
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"char=?"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\)"
0 0 24 3 2 #" ("
0 0 14 3 10 #"string-ref"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 4 #") ( "
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 6 #") )) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lastof"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"sel"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"sel\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"act"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"act\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"alt_list"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 14 3 3 #"jmp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"integer?"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 5 #") ) ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                     [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"jmp"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"jmp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"alt_list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 4 #" )) "
0 0 14 3 3 #"jmp"
0 0 24 3 4 #" ))]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                   )]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"jmp"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"jmp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"alt_list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 4 #" )) "
0 0 14 3 3 #"jmp"
0 0 24 3 4 #" ))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          )]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"boir"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"boir\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"ir"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"ir\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"bo"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"bo\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";##################################################################"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";Se define una consola, consiste en un read-line."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"base-datos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"entrada"
0 0 24 3 2 #" ("
0 0 14 3 9 #"read-line"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"exit\""
0 0 24 3 2 #") "
0 0 19 3 39 #"\"Gracias por utilizar nuestro programa\""
0 0 24 3 1 #")"
0 0 17 3 21 #";condici\303\263n de parada"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 2 #")("
0 0 14 3 8 #"verifica"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 4 #" ))("
0 0 14 3 10 #"base-datos"
0 0 24 3 6 #"))))))"
0 0 17 3 47 #";si no es la condici\303\263n de parada entra al main"
0 0 24 29 1 #"\n"
0 0 24 3 77
(
 #"                                                                    "
 #"         "
) 0 0 17 3 15 #";con la entrada"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";Se define una funcion que verifica los comandos"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"verifica"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"comando"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 4 #"))))"
0 0 17 3 71
(
 #";creamos la variable comando con el primer elemento leido del read-l"
 #"ine"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 15 #";y se verifica "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #"  "
0 0 14 3 7 #"comando"
0 0 24 3 2 #"  "
0 0 19 3 4 #"\"ct\""
0 0 24 3 1 #")"
0 0 17 3 23 #";verifica el comando ct"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 92
(
 #";le pasamos dos parametros, el primero el nombre de la tabla y lo si"
 #"guiente son las columnas"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"ct"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 5 #"))) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 7 #"comando"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"ins\""
0 0 24 3 1 #")"
0 0 17 3 84
(
 #";este comando tiene dos formatos. Para determinar cuando se usa cada"
 #" uno se verifica"
) 0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 58
#";guardamos en una variable el simbolo siguiente a la llave"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"verif"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #"( "
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 7 #" ))))))"
0 0 17 3 64
#";variable verif donde se guarda el tercer elemento de la entrada"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 6 #"char=?"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\("
0 0 24 3 2 #" ("
0 0 14 3 10 #"string-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"verif"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #" ))"
0 0 17 3 38 #";verificamos el tipo de formato de ins"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 3 #"ins"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #"( "
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 6 #" )))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 3 #"ins"
0 0 24 3 3 #"( ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #"( "
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 4 #" )))"
0 0 14 3 4 #"null"
0 0 24 3 1 #" "
0 0 17 3 9 #";columnas"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #"( "
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 9 #" ))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 3 #" ( "
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 5 #" ) ) "
0 0 19 3 5 #"\"sel\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"char=?"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\("
0 0 24 3 2 #" ("
0 0 14 3 10 #"string-ref"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #"( "
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 6 #" )))) "
0 0 21 3 1 #"0"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 3 #"sel"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #"( "
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 6 #" ))))]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 3 #"sel"
0 0 24 3 3 #"( ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #"( "
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 5 #" ))) "
0 0 14 3 4 #"null"
0 0 24 3 1 #" "
0 0 17 3 9 #";columnas"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #"( "
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 8 #" ))))])]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 3 #" ( "
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 5 #" ) ) "
0 0 19 3 5 #"\"act\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"act"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #"( "
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 5 #" ))) "
0 0 17 3 11 #";table name"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #"( "
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 6 #" )))) "
0 0 17 3 3 #";id"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"alt_list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 4 #"))))"
0 0 21 3 1 #"'"
0 0 24 3 8 #"() )) ) "
0 0 17 3 10 #";col names"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"alt_list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 6 #"))))) "
0 0 21 3 1 #"'"
0 0 24 3 8 #"() )) ) "
0 0 17 3 11 #";new values"
0 0 24 29 1 #"\n"
0 0 24 3 55 #"                                                     )]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 3 #" ( "
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 4 #") ) "
0 0 19 3 6 #"\"boir\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"boir"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 3 #" ( "
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 4 #") ) "
0 0 19 3 4 #"\"ir\""
0 0 24 3 5 #")   ("
0 0 14 3 2 #"ir"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 3 #" ( "
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 4 #") ) "
0 0 19 3 4 #"\"bo\""
0 0 24 3 5 #")   ("
0 0 14 3 2 #"bo"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 24 3 3 #" ( "
0 0 14 3 3 #"car"
0 0 24 3 1 #"("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 7 #"entrada"
0 0 24 3 4 #") ) "
0 0 19 3 5 #"\"man\""
0 0 24 3 6 #")    ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 54 #"\"Base de Datos en Scheme, creado por Maikol y Frander\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 1 #"n"
0 0 14 3 1 #"e"
0 0 14 3 1 #"w"
0 0 14 3 1 #"l"
0 0 14 3 3 #"ine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 84
(
 #"\"Los comandos que puede usar son: ct, ins, sel, act, bo, ir, boir y"
 #" exit para salir\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 71
(
 #"\"Para mas info puede revisar el manual de usuario en la documentaci"
 #"\303\263n\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 7 #"newline"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"base-datos"
0 0 24 3 3 #")))"
0           0
